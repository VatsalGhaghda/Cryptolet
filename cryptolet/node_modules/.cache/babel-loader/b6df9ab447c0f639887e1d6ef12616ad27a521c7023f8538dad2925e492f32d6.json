{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\PEDALS  UP\\\\Cryptolet\\\\cryptolet\\\\src\\\\components\\\\PasswordLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Input } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PasswordLogin({\n  setSeedPhrase,\n  setWallet\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = () => {\n    const storedData = localStorage.getItem(\"walletData\");\n    if (storedData) {\n      const {\n        seedPhrase,\n        wallet,\n        hashedPassword\n      } = JSON.parse(storedData);\n      if (hashPassword(password) === hashedPassword) {\n        setSeedPhrase(seedPhrase);\n        setWallet(wallet);\n        navigate(\"/yourwallet\");\n      } else {\n        toast.error(\"Incorrect password!\");\n      }\n    }\n  };\n  const hashPassword = pwd => {\n    // Simple hash for demo - replace with proper hashing in production\n    return btoa(pwd);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login to Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n      placeholder: \"Enter your password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      style: {\n        width: \"90%\",\n        marginBottom: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleLogin,\n      style: {\n        width: \"90%\"\n      },\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PasswordLogin, \"tkxltrbIsMW5MgRnN7beVHhXJzA=\", false, function () {\n  return [useNavigate];\n});\n_c = PasswordLogin;\nexport default PasswordLogin;\nvar _c;\n$RefreshReg$(_c, \"PasswordLogin\");","map":{"version":3,"names":["React","useState","Button","Input","useNavigate","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","PasswordLogin","setSeedPhrase","setWallet","_s","navigate","password","setPassword","handleLogin","storedData","localStorage","getItem","seedPhrase","wallet","hashedPassword","JSON","parse","hashPassword","error","pwd","btoa","children","fileName","_jsxFileName","lineNumber","columnNumber","Password","placeholder","value","onChange","e","target","style","width","marginBottom","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/PEDALS  UP/Cryptolet/cryptolet/src/components/PasswordLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Input } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction PasswordLogin({ setSeedPhrase, setWallet }) {\r\n  const navigate = useNavigate();\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleLogin = () => {\r\n    const storedData = localStorage.getItem(\"walletData\");\r\n    if (storedData) {\r\n      const { seedPhrase, wallet, hashedPassword } = JSON.parse(storedData);\r\n      if (hashPassword(password) === hashedPassword) {\r\n        setSeedPhrase(seedPhrase);\r\n        setWallet(wallet);\r\n        navigate(\"/yourwallet\");\r\n      } else {\r\n        toast.error(\"Incorrect password!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const hashPassword = (pwd) => {\r\n    // Simple hash for demo - replace with proper hashing in production\r\n    return btoa(pwd);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>Login to Wallet</h2>\r\n      <Input.Password\r\n        placeholder=\"Enter your password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        style={{ width: \"90%\", marginBottom: \"20px\" }}\r\n      />\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={handleLogin}\r\n        style={{ width: \"90%\" }}\r\n      >\r\n        Login\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PasswordLogin;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,QAAQ,MAAM;AACpC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,aAAaA,CAAC;EAAEC,aAAa;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMgB,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACrD,IAAIF,UAAU,EAAE;MACd,MAAM;QAAEG,UAAU;QAAEC,MAAM;QAAEC;MAAe,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACP,UAAU,CAAC;MACrE,IAAIQ,YAAY,CAACX,QAAQ,CAAC,KAAKQ,cAAc,EAAE;QAC7CZ,aAAa,CAACU,UAAU,CAAC;QACzBT,SAAS,CAACU,MAAM,CAAC;QACjBR,QAAQ,CAAC,aAAa,CAAC;MACzB,CAAC,MAAM;QACLT,KAAK,CAACsB,KAAK,CAAC,qBAAqB,CAAC;MACpC;IACF;EACF,CAAC;EAED,MAAMD,YAAY,GAAIE,GAAG,IAAK;IAC5B;IACA,OAAOC,IAAI,CAACD,GAAG,CAAC;EAClB,CAAC;EAED,oBACErB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB3B,OAAA,CAACJ,KAAK,CAACgC,QAAQ;MACbC,WAAW,EAAC,qBAAqB;MACjCC,KAAK,EAAEtB,QAAS;MAChBuB,QAAQ,EAAGC,CAAC,IAAKvB,WAAW,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACF3B,OAAA,CAACL,MAAM;MACL0C,IAAI,EAAC,SAAS;MACdC,OAAO,EAAE5B,WAAY;MACrBwB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAZ,QAAA,EACzB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACT,CAAC;AAEP;AAACrB,EAAA,CAzCQH,aAAa;EAAA,QACHN,WAAW;AAAA;AAAA0C,EAAA,GADrBpC,aAAa;AA2CtB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}