{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\PEDALS  UP\\\\Cryptolet\\\\cryptolet\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ... existing imports ...\n\nfunction App() {\n  // ... existing state ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"// ... existing header code ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), wallet && seedPhrase ? /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/yourwallet\",\n        element: /*#__PURE__*/_jsxDEV(WalletView, {\n          wallet: wallet,\n          setWallet: setWallet,\n          seedPhrase: seedPhrase,\n          setSeedPhrase: setSeedPhrase,\n          selectedChain: selectedChain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/import\",\n        element: /*#__PURE__*/_jsxDEV(ImportWallet, {\n          setSeedPhrase: setSeedPhrase,\n          setWallet: setWallet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/password-login\",\n        element: /*#__PURE__*/_jsxDEV(PasswordLogin, {\n          setSeedPhrase: setSeedPhrase,\n          setWallet: setWallet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/recover\",\n        element: /*#__PURE__*/_jsxDEV(RecoverAccount, {\n          setSeedPhrase: setSeedPhrase,\n          setWallet: setWallet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/yourwallet\",\n        element: /*#__PURE__*/_jsxDEV(CreateAccount, {\n          setSeedPhrase: setSeedPhrase,\n          setWallet: setWallet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","wallet","seedPhrase","Routes","Route","path","element","WalletView","setWallet","setSeedPhrase","selectedChain","Home","ImportWallet","PasswordLogin","RecoverAccount","CreateAccount","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/PEDALS  UP/Cryptolet/cryptolet/src/App.js"],"sourcesContent":["// ... existing imports ...\r\n\r\nfunction App() {\r\n  // ... existing state ...\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        // ... existing header code ...\r\n      </header>\r\n      {wallet && seedPhrase ? (\r\n        <Routes>\r\n          <Route\r\n            path=\"/yourwallet\"\r\n            element={\r\n              <WalletView\r\n                wallet={wallet}\r\n                setWallet={setWallet}\r\n                seedPhrase={seedPhrase}\r\n                setSeedPhrase={setSeedPhrase}\r\n                selectedChain={selectedChain}\r\n              />\r\n            }\r\n          />\r\n        </Routes>\r\n      ) : (\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route\r\n            path=\"/import\"\r\n            element={\r\n              <ImportWallet\r\n                setSeedPhrase={setSeedPhrase}\r\n                setWallet={setWallet}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/password-login\"\r\n            element={\r\n              <PasswordLogin\r\n                setSeedPhrase={setSeedPhrase}\r\n                setWallet={setWallet}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/recover\"\r\n            element={\r\n              <RecoverAccount\r\n                setSeedPhrase={setSeedPhrase}\r\n                setWallet={setWallet}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/yourwallet\"\r\n            element={\r\n              <CreateAccount\r\n                setSeedPhrase={setSeedPhrase}\r\n                setWallet={setWallet}\r\n              />\r\n            }\r\n          />\r\n        </Routes>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}