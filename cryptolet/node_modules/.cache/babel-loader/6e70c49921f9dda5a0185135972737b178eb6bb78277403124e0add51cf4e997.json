{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{Button}from\"antd\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Home(){const navigate=useNavigate();const[hasWallet,setHasWallet]=useState(false);useEffect(()=>{// Check if wallet data exists in local storage\nconst encryptedWalletData=localStorage.getItem('encryptedWalletData');setHasWallet(!!encryptedWalletData);// If wallet exists, redirect to password login page\nif(encryptedWalletData){navigate(\"/password-login\");}},[navigate]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Best Crypto Wallet\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"h4\",children:\"Secure, Self Custodial, Decentralized\"}),!hasWallet&&/*#__PURE__*/// Only show create/import options if no wallet exists\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>navigate(\"/create-wallet\"),className:\"frontPageButton\",type:\"primary\",children:\"Create A Wallet\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>navigate(\"/import-wallet\"),className:\"frontPageButton\",type:\"default\",children:\"Import Existing Wallet\"}),/*#__PURE__*/_jsx(\"p\",{className:\"frontPageBottom\",onClick:()=>navigate(\"/recover\"),style:{cursor:\"pointer\"},children:\"Recover Account using Seed Phrase\"})]})]})});}export default Home;","map":{"version":3,"names":["React","useEffect","useState","Button","useNavigate","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Home","navigate","hasWallet","setHasWallet","encryptedWalletData","localStorage","getItem","children","className","onClick","type","style","cursor"],"sources":["C:/Users/ASUS/OneDrive/Desktop/PEDALS  UP/Cryptolet/cryptolet/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n  const [hasWallet, setHasWallet] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if wallet data exists in local storage\r\n    const encryptedWalletData = localStorage.getItem('encryptedWalletData');\r\n    setHasWallet(!!encryptedWalletData);\r\n    \r\n    // If wallet exists, redirect to password login page\r\n    if (encryptedWalletData) {\r\n      navigate(\"/password-login\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <h2>Best Crypto Wallet</h2>\r\n        <h4 className=\"h4\">Secure, Self Custodial, Decentralized</h4>\r\n        \r\n        {!hasWallet && (\r\n          // Only show create/import options if no wallet exists\r\n          <>\r\n            <Button\r\n              onClick={() => navigate(\"/create-wallet\")}\r\n              className=\"frontPageButton\"\r\n              type=\"primary\"\r\n            >\r\n              Create A Wallet\r\n            </Button>\r\n            <Button\r\n              onClick={() => navigate(\"/import-wallet\")}\r\n              className=\"frontPageButton\"\r\n              type=\"default\"\r\n            >\r\n              Import Existing Wallet\r\n            </Button>\r\n            <p \r\n              className=\"frontPageBottom\" \r\n              onClick={() => navigate(\"/recover\")}\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              Recover Account using Seed Phrase\r\n            </p>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,MAAM,KAAQ,MAAM,CAC7B,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd,KAAM,CAAAC,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACS,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAEjDD,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAc,mBAAmB,CAAGC,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC,CACvEH,YAAY,CAAC,CAAC,CAACC,mBAAmB,CAAC,CAEnC;AACA,GAAIA,mBAAmB,CAAE,CACvBH,QAAQ,CAAC,iBAAiB,CAAC,CAC7B,CACF,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd,mBACEN,IAAA,CAAAE,SAAA,EAAAU,QAAA,cACER,KAAA,QAAKS,SAAS,CAAC,SAAS,CAAAD,QAAA,eACtBZ,IAAA,OAAAY,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3BZ,IAAA,OAAIa,SAAS,CAAC,IAAI,CAAAD,QAAA,CAAC,uCAAqC,CAAI,CAAC,CAE5D,CAACL,SAAS,eACT;AACAH,KAAA,CAAAF,SAAA,EAAAU,QAAA,eACEZ,IAAA,CAACH,MAAM,EACLiB,OAAO,CAAEA,CAAA,GAAMR,QAAQ,CAAC,gBAAgB,CAAE,CAC1CO,SAAS,CAAC,iBAAiB,CAC3BE,IAAI,CAAC,SAAS,CAAAH,QAAA,CACf,iBAED,CAAQ,CAAC,cACTZ,IAAA,CAACH,MAAM,EACLiB,OAAO,CAAEA,CAAA,GAAMR,QAAQ,CAAC,gBAAgB,CAAE,CAC1CO,SAAS,CAAC,iBAAiB,CAC3BE,IAAI,CAAC,SAAS,CAAAH,QAAA,CACf,wBAED,CAAQ,CAAC,cACTZ,IAAA,MACEa,SAAS,CAAC,iBAAiB,CAC3BC,OAAO,CAAEA,CAAA,GAAMR,QAAQ,CAAC,UAAU,CAAE,CACpCU,KAAK,CAAE,CAAEC,MAAM,CAAE,SAAU,CAAE,CAAAL,QAAA,CAC9B,mCAED,CAAG,CAAC,EACJ,CACH,EACE,CAAC,CACN,CAAC,CAEP,CAEA,cAAe,CAAAP,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}