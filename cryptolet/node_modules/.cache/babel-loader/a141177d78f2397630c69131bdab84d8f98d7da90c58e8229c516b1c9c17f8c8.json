{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\PEDALS  UP\\\\Cryptolet\\\\cryptolet\\\\src\\\\components\\\\RecoverAccount.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BulbOutlined } from \"@ant-design/icons\";\nimport { Button, Input } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ethers } from \"ethers\";\nimport { toast } from 'react-toastify';\nimport { encryptData } from '../utils/passwordManager';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nfunction RecoverAccount({\n  setWallet,\n  setSeedPhrase\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [step, setStep] = useState(1);\n  const [typedSeed, setTypedSeed] = useState(\"\");\n  const [nonValid, setNonValid] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  function seedAdjust(e) {\n    setNonValid(false);\n    setTypedSeed(e.target.value);\n  }\n  function validateSeedPhrase() {\n    let recoveredWallet;\n    try {\n      recoveredWallet = ethers.Wallet.fromPhrase(typedSeed);\n      setStep(2);\n    } catch (err) {\n      setNonValid(true);\n      return;\n    }\n  }\n  function recoverWallet() {\n    if (!password || !confirmPassword) {\n      toast.error(\"Please enter and confirm your password\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords don't match!\");\n      return;\n    }\n    if (password.length < 8) {\n      toast.error(\"Password must be at least 8 characters!\");\n      return;\n    }\n    try {\n      const recoveredWallet = ethers.Wallet.fromPhrase(typedSeed);\n      const walletData = {\n        seedPhrase: typedSeed,\n        wallet: recoveredWallet.address,\n        hashedPassword: btoa(password)\n      };\n      const encryptedData = encryptData(walletData, password);\n      localStorage.setItem('encryptedWalletData', encryptedData);\n      setSeedPhrase(typedSeed);\n      setWallet(recoveredWallet.address);\n      toast.success(\"Wallet recovered successfully!\");\n      navigate(\"/yourwallet\");\n    } catch (err) {\n      toast.error(\"Error recovering wallet. Please try again.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [step === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recover Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mnemonic\",\n          children: [/*#__PURE__*/_jsxDEV(BulbOutlined, {\n            style: {\n              fontSize: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Type your seed phrase in the field below to recover your wallet (it should include 12 words separated with spaces)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n          value: typedSeed,\n          onChange: seedAdjust,\n          rows: 4,\n          className: \"seedPhraseContainer\",\n          placeholder: \"Type your seed phrase here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: typedSeed.split(\" \").length !== 12 || typedSeed.slice(-1) === \" \",\n          className: \"frontPageButton\",\n          type: \"primary\",\n          onClick: () => validateSeedPhrase(),\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), nonValid && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: \" Invalid Seed Phrase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Set New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"white\",\n            marginBottom: \"20px\"\n          },\n          children: \"Create a password to secure your wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"Create password (min 8 characters)\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          style: {\n            width: \"90%\",\n            marginBottom: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n          placeholder: \"Confirm password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          style: {\n            width: \"90%\",\n            marginBottom: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"frontPageButton\",\n          type: \"primary\",\n          onClick: () => recoverWallet(),\n          children: \"Recover Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"frontPageBottom\",\n        onClick: () => navigate(\"/\"),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Back Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(RecoverAccount, \"fHvp6guJWk8Uc8Ih7kwD1Kif3xQ=\", false, function () {\n  return [useNavigate];\n});\n_c = RecoverAccount;\nexport default RecoverAccount;\nvar _c;\n$RefreshReg$(_c, \"RecoverAccount\");","map":{"version":3,"names":["React","useState","BulbOutlined","Button","Input","useNavigate","ethers","toast","encryptData","jsxDEV","_jsxDEV","Fragment","_Fragment","TextArea","RecoverAccount","setWallet","setSeedPhrase","_s","navigate","step","setStep","typedSeed","setTypedSeed","nonValid","setNonValid","password","setPassword","confirmPassword","setConfirmPassword","seedAdjust","e","target","value","validateSeedPhrase","recoveredWallet","Wallet","fromPhrase","err","recoverWallet","error","length","walletData","seedPhrase","wallet","address","hashedPassword","btoa","encryptedData","localStorage","setItem","success","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","onChange","rows","placeholder","disabled","split","slice","type","onClick","color","marginBottom","Password","width","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/PEDALS  UP/Cryptolet/cryptolet/src/components/RecoverAccount.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { BulbOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ethers } from \"ethers\";\r\nimport { toast } from 'react-toastify';\r\nimport { encryptData } from '../utils/passwordManager';\r\n\r\nconst { TextArea } = Input;\r\n\r\nfunction RecoverAccount({ setWallet, setSeedPhrase }) {\r\n  const navigate = useNavigate();\r\n  const [step, setStep] = useState(1);\r\n  const [typedSeed, setTypedSeed] = useState(\"\");\r\n  const [nonValid, setNonValid] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  function seedAdjust(e) {\r\n    setNonValid(false);\r\n    setTypedSeed(e.target.value);\r\n  }\r\n\r\n  function validateSeedPhrase() {\r\n    let recoveredWallet;\r\n    try {\r\n      recoveredWallet = ethers.Wallet.fromPhrase(typedSeed);\r\n      setStep(2);\r\n    } catch(err) {\r\n      setNonValid(true);\r\n      return;\r\n    }\r\n  }\r\n\r\n  function recoverWallet() {\r\n    if (!password || !confirmPassword) {\r\n      toast.error(\"Please enter and confirm your password\");\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      toast.error(\"Passwords don't match!\");\r\n      return;\r\n    }\r\n    if (password.length < 8) {\r\n      toast.error(\"Password must be at least 8 characters!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const recoveredWallet = ethers.Wallet.fromPhrase(typedSeed);\r\n      const walletData = {\r\n        seedPhrase: typedSeed,\r\n        wallet: recoveredWallet.address,\r\n        hashedPassword: btoa(password)\r\n      };\r\n\r\n      const encryptedData = encryptData(walletData, password);\r\n      localStorage.setItem('encryptedWalletData', encryptedData);\r\n\r\n      setSeedPhrase(typedSeed);\r\n      setWallet(recoveredWallet.address);\r\n      toast.success(\"Wallet recovered successfully!\");\r\n      navigate(\"/yourwallet\");\r\n    } catch(err) {\r\n      toast.error(\"Error recovering wallet. Please try again.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        {step === 1 ? (\r\n          <>\r\n            <h2>Recover Wallet</h2>\r\n            <div className=\"mnemonic\">\r\n              <BulbOutlined style={{ fontSize: \"20px\" }} />\r\n              <div>\r\n                Type your seed phrase in the field below to recover your wallet (it\r\n                should include 12 words separated with spaces)\r\n              </div>\r\n            </div>\r\n            <TextArea\r\n              value={typedSeed}\r\n              onChange={seedAdjust}\r\n              rows={4}\r\n              className=\"seedPhraseContainer\"\r\n              placeholder=\"Type your seed phrase here...\"\r\n            />\r\n            <Button\r\n              disabled={\r\n                typedSeed.split(\" \").length !== 12 || typedSeed.slice(-1) === \" \"\r\n              }\r\n              className=\"frontPageButton\"\r\n              type=\"primary\"\r\n              onClick={() => validateSeedPhrase()}\r\n            >\r\n              Continue\r\n            </Button>\r\n            {nonValid && <p style={{color: \"red\"}}> Invalid Seed Phrase</p>}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h2>Set New Password</h2>\r\n            <p style={{ color: \"white\", marginBottom: \"20px\" }}>\r\n              Create a password to secure your wallet\r\n            </p>\r\n            <Input.Password\r\n              placeholder=\"Create password (min 8 characters)\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              style={{ width: \"90%\", marginBottom: \"20px\" }}\r\n            />\r\n            <Input.Password\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              style={{ width: \"90%\", marginBottom: \"20px\" }}\r\n            />\r\n            <Button\r\n              className=\"frontPageButton\"\r\n              type=\"primary\"\r\n              onClick={() => recoverWallet()}\r\n            >\r\n              Recover Wallet\r\n            </Button>\r\n          </>\r\n        )}\r\n        <p className=\"frontPageBottom\" onClick={() => navigate(\"/\")}>\r\n          <span>Back Home</span>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecoverAccount;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}