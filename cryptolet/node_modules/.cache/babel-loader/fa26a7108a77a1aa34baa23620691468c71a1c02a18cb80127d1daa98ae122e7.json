{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\PEDALS  UP\\\\Cryptolet\\\\cryptolet\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport PasswordPrompt from './PasswordPrompt';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home({\n  setWallet,\n  setSeedPhrase\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [showPasswordPrompt, setShowPasswordPrompt] = useState(false);\n  const [isCreating, setIsCreating] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n  const handleCreateWallet = () => {\n    setIsCreating(true);\n    setIsLogin(false);\n    setShowPasswordPrompt(true);\n  };\n  const handleLogin = () => {\n    setIsCreating(false);\n    setIsLogin(true);\n    setShowPasswordPrompt(true);\n  };\n  const handlePasswordSubmit = password => {\n    if (isCreating) {\n      localStorage.setItem('walletPassword', password);\n      navigate(\"/yourwallet\");\n    } else if (isLogin) {\n      const storedPassword = localStorage.getItem('walletPassword');\n      const storedWallet = localStorage.getItem('wallet');\n      const storedSeedPhrase = localStorage.getItem('seedPhrase');\n      if (!storedWallet || !storedSeedPhrase) {\n        toast.error(\"No wallet found. Please create or recover a wallet first.\");\n        return;\n      }\n      if (password === storedPassword) {\n        setWallet(storedWallet);\n        setSeedPhrase(storedSeedPhrase);\n        navigate(\"/walletview\");\n      } else {\n        toast.error(\"Incorrect password\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: showPasswordPrompt ? /*#__PURE__*/_jsxDEV(PasswordPrompt, {\n        onPasswordSubmit: handlePasswordSubmit,\n        isCreating: isCreating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Best Crypto Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"h4\",\n          children: \"Secure, Self Custodial, Decentralized\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateWallet,\n          className: \"frontPageButton\",\n          type: \"primary\",\n          children: \"Create A Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleLogin,\n          className: \"frontPageButton\",\n          type: \"default\",\n          children: \"Login With Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate(\"/recover\"),\n          className: \"frontPageButton\",\n          type: \"default\",\n          children: \"Recover With Seed Phrase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"65qGzI5mY1jRVlBS9KkdZFS2U04=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Button","useNavigate","PasswordPrompt","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","setWallet","setSeedPhrase","_s","navigate","showPasswordPrompt","setShowPasswordPrompt","isCreating","setIsCreating","isLogin","setIsLogin","handleCreateWallet","handleLogin","handlePasswordSubmit","password","localStorage","setItem","storedPassword","getItem","storedWallet","storedSeedPhrase","error","children","className","onPasswordSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/PEDALS  UP/Cryptolet/cryptolet/src/components/Home.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PasswordPrompt from './PasswordPrompt';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Home({ setWallet, setSeedPhrase }) {\r\n  const navigate = useNavigate();\r\n  const [showPasswordPrompt, setShowPasswordPrompt] = useState(false);\r\n  const [isCreating, setIsCreating] = useState(false);\r\n  const [isLogin, setIsLogin] = useState(false);\r\n\r\n  const handleCreateWallet = () => {\r\n    setIsCreating(true);\r\n    setIsLogin(false);\r\n    setShowPasswordPrompt(true);\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    setIsCreating(false);\r\n    setIsLogin(true);\r\n    setShowPasswordPrompt(true);\r\n  };\r\n\r\n  const handlePasswordSubmit = (password) => {\r\n    if (isCreating) {\r\n      localStorage.setItem('walletPassword', password);\r\n      navigate(\"/yourwallet\");\r\n    } else if (isLogin) {\r\n      const storedPassword = localStorage.getItem('walletPassword');\r\n      const storedWallet = localStorage.getItem('wallet');\r\n      const storedSeedPhrase = localStorage.getItem('seedPhrase');\r\n      \r\n      if (!storedWallet || !storedSeedPhrase) {\r\n        toast.error(\"No wallet found. Please create or recover a wallet first.\");\r\n        return;\r\n      }\r\n      \r\n      if (password === storedPassword) {\r\n        setWallet(storedWallet);\r\n        setSeedPhrase(storedSeedPhrase);\r\n        navigate(\"/walletview\");\r\n      } else {\r\n        toast.error(\"Incorrect password\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        {showPasswordPrompt ? (\r\n          <PasswordPrompt \r\n            onPasswordSubmit={handlePasswordSubmit}\r\n            isCreating={isCreating}\r\n          />\r\n        ) : (\r\n          <>\r\n            <h2> Best Crypto Wallet</h2>\r\n            <h4 className=\"h4\">Secure, Self Custodial, Decentralized</h4>\r\n            <Button\r\n              onClick={handleCreateWallet}\r\n              className=\"frontPageButton\"\r\n              type=\"primary\"\r\n            >\r\n              Create A Wallet\r\n            </Button>\r\n            <Button\r\n              onClick={handleLogin}\r\n              className=\"frontPageButton\"\r\n              type=\"default\"\r\n            >\r\n              Login With Password\r\n            </Button>\r\n            <Button\r\n              onClick={() => navigate(\"/recover\")}\r\n              className=\"frontPageButton\"\r\n              type=\"default\"\r\n            >\r\n              Recover With Seed Phrase\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}