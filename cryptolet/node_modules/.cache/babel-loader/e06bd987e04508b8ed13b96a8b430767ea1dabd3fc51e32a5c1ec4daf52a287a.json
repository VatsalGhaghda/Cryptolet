{"ast":null,"code":"import React,{useState}from\"react\";import{Button,Input}from\"antd\";import{useNavigate}from\"react-router-dom\";import{toast}from'react-toastify';import{ethers}from\"ethers\";import{encryptData}from'../utils/passwordManager';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function RecoverAccount(_ref){let{setSeedPhrase,setWallet}=_ref;const navigate=useNavigate();const[importedPhrase,setImportedPhrase]=useState(\"\");const[password,setPassword]=useState(\"\");const[confirmPassword,setConfirmPassword]=useState(\"\");const handleRecovery=()=>{if(!password||!confirmPassword){toast.error(\"Please enter and confirm your password\");return;}if(password!==confirmPassword){toast.error(\"Passwords don't match!\");return;}if(password.length<8){toast.error(\"Password must be at least 8 characters!\");return;}try{const wallet=ethers.Wallet.fromPhrase(importedPhrase);const walletData={seedPhrase:importedPhrase,wallet:wallet.address,hashedPassword:btoa(password)};const encryptedData=encryptData(walletData,password);localStorage.setItem('encryptedWalletData',encryptedData);setSeedPhrase(importedPhrase);setWallet(wallet.address);toast.success(\"Account recovered successfully!\");navigate(\"/yourwallet\");}catch(error){toast.error(\"Error recovering account. Please try again.\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Recover Account\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:\"white\",marginBottom:\"20px\"},children:\"Enter your 12-word seed phrase\"}),/*#__PURE__*/_jsx(Input.TextArea,{placeholder:\"Enter seed phrase...\",value:importedPhrase,onChange:e=>setImportedPhrase(e.target.value),style:{width:\"90%\",marginBottom:\"20px\",height:\"100px\"}}),/*#__PURE__*/_jsx(Input.Password,{placeholder:\"Create new password (min 8 characters)\",value:password,onChange:e=>setPassword(e.target.value),style:{width:\"90%\",marginBottom:\"20px\"}}),/*#__PURE__*/_jsx(Input.Password,{placeholder:\"Confirm new password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),style:{width:\"90%\",marginBottom:\"20px\"}}),/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:handleRecovery,style:{width:\"90%\"},children:\"Recover Account\"}),/*#__PURE__*/_jsx(\"p\",{className:\"frontPageBottom\",onClick:()=>navigate(\"/\"),children:\"Back Home\"})]});}export default RecoverAccount;","map":{"version":3,"names":["React","useState","Button","Input","useNavigate","toast","ethers","encryptData","jsx","_jsx","jsxs","_jsxs","RecoverAccount","_ref","setSeedPhrase","setWallet","navigate","importedPhrase","setImportedPhrase","password","setPassword","confirmPassword","setConfirmPassword","handleRecovery","error","length","wallet","Wallet","fromPhrase","walletData","seedPhrase","address","hashedPassword","btoa","encryptedData","localStorage","setItem","success","className","children","style","color","marginBottom","TextArea","placeholder","value","onChange","e","target","width","height","Password","type","onClick"],"sources":["C:/Users/ASUS/OneDrive/Desktop/PEDALS  UP/Cryptolet/cryptolet/src/components/RecoverAccount.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Input } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport { ethers } from \"ethers\";\r\nimport { encryptData } from '../utils/passwordManager';\r\n\r\nfunction RecoverAccount({ setSeedPhrase, setWallet }) {\r\n  const navigate = useNavigate();\r\n  const [importedPhrase, setImportedPhrase] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const handleRecovery = () => {\r\n    if (!password || !confirmPassword) {\r\n      toast.error(\"Please enter and confirm your password\");\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      toast.error(\"Passwords don't match!\");\r\n      return;\r\n    }\r\n    if (password.length < 8) {\r\n      toast.error(\"Password must be at least 8 characters!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const wallet = ethers.Wallet.fromPhrase(importedPhrase);\r\n      const walletData = {\r\n        seedPhrase: importedPhrase,\r\n        wallet: wallet.address,\r\n        hashedPassword: btoa(password)\r\n      };\r\n\r\n      const encryptedData = encryptData(walletData, password);\r\n      localStorage.setItem('encryptedWalletData', encryptedData);\r\n\r\n      setSeedPhrase(importedPhrase);\r\n      setWallet(wallet.address);\r\n      toast.success(\"Account recovered successfully!\");\r\n      navigate(\"/yourwallet\");\r\n    } catch (error) {\r\n      toast.error(\"Error recovering account. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <h2>Recover Account</h2>\r\n      <p style={{ color: \"white\", marginBottom: \"20px\" }}>\r\n        Enter your 12-word seed phrase\r\n      </p>\r\n      <Input.TextArea\r\n        placeholder=\"Enter seed phrase...\"\r\n        value={importedPhrase}\r\n        onChange={(e) => setImportedPhrase(e.target.value)}\r\n        style={{ width: \"90%\", marginBottom: \"20px\", height: \"100px\" }}\r\n      />\r\n      <Input.Password\r\n        placeholder=\"Create new password (min 8 characters)\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        style={{ width: \"90%\", marginBottom: \"20px\" }}\r\n      />\r\n      <Input.Password\r\n        placeholder=\"Confirm new password\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n        style={{ width: \"90%\", marginBottom: \"20px\" }}\r\n      />\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={handleRecovery}\r\n        style={{ width: \"90%\" }}\r\n      >\r\n        Recover Account\r\n      </Button>\r\n      <p className=\"frontPageBottom\" onClick={() => navigate(\"/\")}>\r\n        Back Home\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecoverAccount;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}