{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\PEDALS  UP\\\\Cryptolet\\\\cryptolet\\\\src\\\\components\\\\ImportWallet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Input } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { ethers } from \"ethers\";\nimport { encryptData } from '../utils/passwordManager';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ImportWallet({\n  setSeedPhrase,\n  setWallet\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [step, setStep] = useState(1);\n  const [importedPhrase, setImportedPhrase] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const validateAndProceed = () => {\n    if (!importedPhrase.trim()) {\n      toast.error(\"Please enter your seed phrase\");\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Validate seed phrase\n      ethers.Wallet.fromPhrase(importedPhrase);\n      setStep(2);\n    } catch (error) {\n      toast.error(\"Invalid seed phrase! Please check and try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleImport = () => {\n    if (!password || !confirmPassword) {\n      toast.error(\"Please enter and confirm your password\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords don't match!\");\n      return;\n    }\n    if (password.length < 8) {\n      toast.error(\"Password must be at least 8 characters!\");\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const wallet = ethers.Wallet.fromPhrase(importedPhrase);\n      const walletData = {\n        seedPhrase: importedPhrase,\n        wallet: wallet.address,\n        hashedPassword: btoa(password)\n      };\n      const encryptedData = encryptData(walletData, password);\n      localStorage.setItem('encryptedWalletData', encryptedData);\n      setSeedPhrase(importedPhrase);\n      setWallet(wallet.address);\n      toast.success(\"Wallet imported successfully!\");\n      navigate(\"/yourwallet\");\n    } catch (error) {\n      toast.error(\"Error importing wallet. Please try again.\");\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      if (step === 1) {\n        validateAndProceed();\n      } else {\n        handleImport();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [step === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Import Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"white\",\n          marginBottom: \"20px\"\n        },\n        children: \"Enter your 12-word seed phrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n        placeholder: \"Enter seed phrase...\",\n        value: importedPhrase,\n        onChange: e => setImportedPhrase(e.target.value),\n        onKeyPress: handleKeyPress,\n        style: {\n          width: \"90%\",\n          marginBottom: \"20px\",\n          height: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: validateAndProceed,\n        loading: isLoading,\n        style: {\n          width: \"90%\"\n        },\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n        placeholder: \"Create password (min 8 characters)\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        onKeyPress: handleKeyPress,\n        style: {\n          width: \"90%\",\n          marginBottom: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n        placeholder: \"Confirm password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        onKeyPress: handleKeyPress,\n        style: {\n          width: \"90%\",\n          marginBottom: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleImport,\n        loading: isLoading,\n        style: {\n          width: \"90%\"\n        },\n        children: \"Import Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"frontPageBottom\",\n      onClick: () => navigate(\"/\"),\n      children: \"Back Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(ImportWallet, \"GNX9Ok+ASHvbcvJ0vMgvacYMtbM=\", false, function () {\n  return [useNavigate];\n});\n_c = ImportWallet;\nexport default ImportWallet;\nvar _c;\n$RefreshReg$(_c, \"ImportWallet\");","map":{"version":3,"names":["React","useState","Button","Input","useNavigate","toast","ethers","encryptData","jsxDEV","_jsxDEV","Fragment","_Fragment","ImportWallet","setSeedPhrase","setWallet","_s","navigate","step","setStep","importedPhrase","setImportedPhrase","password","setPassword","confirmPassword","setConfirmPassword","isLoading","setIsLoading","validateAndProceed","trim","error","Wallet","fromPhrase","handleImport","length","wallet","walletData","seedPhrase","address","hashedPassword","btoa","encryptedData","localStorage","setItem","success","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","TextArea","placeholder","value","onChange","target","onKeyPress","width","height","type","onClick","loading","Password","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/PEDALS  UP/Cryptolet/cryptolet/src/components/ImportWallet.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Input } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport { ethers } from \"ethers\";\r\nimport { encryptData } from '../utils/passwordManager';\r\n\r\nfunction ImportWallet({ setSeedPhrase, setWallet }) {\r\n  const navigate = useNavigate();\r\n  const [step, setStep] = useState(1);\r\n  const [importedPhrase, setImportedPhrase] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const validateAndProceed = () => {\r\n    if (!importedPhrase.trim()) {\r\n      toast.error(\"Please enter your seed phrase\");\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    try {\r\n      // Validate seed phrase\r\n      ethers.Wallet.fromPhrase(importedPhrase);\r\n      setStep(2);\r\n    } catch (error) {\r\n      toast.error(\"Invalid seed phrase! Please check and try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleImport = () => {\r\n    if (!password || !confirmPassword) {\r\n      toast.error(\"Please enter and confirm your password\");\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      toast.error(\"Passwords don't match!\");\r\n      return;\r\n    }\r\n    if (password.length < 8) {\r\n      toast.error(\"Password must be at least 8 characters!\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const wallet = ethers.Wallet.fromPhrase(importedPhrase);\r\n      const walletData = {\r\n        seedPhrase: importedPhrase,\r\n        wallet: wallet.address,\r\n        hashedPassword: btoa(password)\r\n      };\r\n\r\n      const encryptedData = encryptData(walletData, password);\r\n      localStorage.setItem('encryptedWalletData', encryptedData);\r\n\r\n      setSeedPhrase(importedPhrase);\r\n      setWallet(wallet.address);\r\n      toast.success(\"Wallet imported successfully!\");\r\n      navigate(\"/yourwallet\");\r\n    } catch (error) {\r\n      toast.error(\"Error importing wallet. Please try again.\");\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (step === 1) {\r\n        validateAndProceed();\r\n      } else {\r\n        handleImport();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      {step === 1 ? (\r\n        <>\r\n          <h2>Import Wallet</h2>\r\n          <p style={{ color: \"white\", marginBottom: \"20px\" }}>\r\n            Enter your 12-word seed phrase\r\n          </p>\r\n          <Input.TextArea\r\n            placeholder=\"Enter seed phrase...\"\r\n            value={importedPhrase}\r\n            onChange={(e) => setImportedPhrase(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            style={{ width: \"90%\", marginBottom: \"20px\", height: \"100px\" }}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={validateAndProceed}\r\n            loading={isLoading}\r\n            style={{ width: \"90%\" }}\r\n          >\r\n            Continue\r\n          </Button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>Set Password</h2>\r\n          <Input.Password\r\n            placeholder=\"Create password (min 8 characters)\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            style={{ width: \"90%\", marginBottom: \"20px\" }}\r\n          />\r\n          <Input.Password\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            style={{ width: \"90%\", marginBottom: \"20px\" }}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={handleImport}\r\n            loading={isLoading}\r\n            style={{ width: \"90%\" }}\r\n          >\r\n            Import Wallet\r\n          </Button>\r\n        </>\r\n      )}\r\n      <p className=\"frontPageBottom\" onClick={() => navigate(\"/\")}>\r\n        Back Home\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImportWallet;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}