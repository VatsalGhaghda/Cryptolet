{"ast":null,"code":"// Create a new file for password management\nimport CryptoJS from'crypto-js';export const encryptData=(data,password)=>{return CryptoJS.AES.encrypt(JSON.stringify(data),password).toString();};export const decryptData=(encryptedData,password)=>{try{const bytes=CryptoJS.AES.decrypt(encryptedData,password);return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));}catch(error){return null;}};","map":{"version":3,"names":["CryptoJS","encryptData","data","password","AES","encrypt","JSON","stringify","toString","decryptData","encryptedData","bytes","decrypt","parse","enc","Utf8","error"],"sources":["C:/Users/ASUS/OneDrive/Desktop/PEDALS  UP/Cryptolet/cryptolet/src/utils/passwordManager.js"],"sourcesContent":["// Create a new file for password management\r\nimport CryptoJS from 'crypto-js';\r\n\r\nexport const encryptData = (data, password) => {\r\n  return CryptoJS.AES.encrypt(JSON.stringify(data), password).toString();\r\n};\r\n\r\nexport const decryptData = (encryptedData, password) => {\r\n  try {\r\n    const bytes = CryptoJS.AES.decrypt(encryptedData, password);\r\n    return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};"],"mappings":"AAAA;AACA,MAAO,CAAAA,QAAQ,KAAM,WAAW,CAEhC,MAAO,MAAM,CAAAC,WAAW,CAAGA,CAACC,IAAI,CAAEC,QAAQ,GAAK,CAC7C,MAAO,CAAAH,QAAQ,CAACI,GAAG,CAACC,OAAO,CAACC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAEC,QAAQ,CAAC,CAACK,QAAQ,CAAC,CAAC,CACxE,CAAC,CAED,MAAO,MAAM,CAAAC,WAAW,CAAGA,CAACC,aAAa,CAAEP,QAAQ,GAAK,CACtD,GAAI,CACF,KAAM,CAAAQ,KAAK,CAAGX,QAAQ,CAACI,GAAG,CAACQ,OAAO,CAACF,aAAa,CAAEP,QAAQ,CAAC,CAC3D,MAAO,CAAAG,IAAI,CAACO,KAAK,CAACF,KAAK,CAACH,QAAQ,CAACR,QAAQ,CAACc,GAAG,CAACC,IAAI,CAAC,CAAC,CACtD,CAAE,MAAOC,KAAK,CAAE,CACd,MAAO,KAAI,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}