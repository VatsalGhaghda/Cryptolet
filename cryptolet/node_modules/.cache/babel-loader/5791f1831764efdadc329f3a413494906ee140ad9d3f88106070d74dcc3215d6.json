{"ast":null,"code":"// Create a new file for password management\nimport CryptoJS from 'crypto-js';\nexport const encryptData = (data, password) => {\n  return CryptoJS.AES.encrypt(JSON.stringify(data), password).toString();\n};\nexport const decryptData = (encryptedData, password) => {\n  try {\n    const bytes = CryptoJS.AES.decrypt(encryptedData, password);\n    return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n  } catch (error) {\n    return null;\n  }\n};","map":{"version":3,"names":["CryptoJS","encryptData","data","password","AES","encrypt","JSON","stringify","toString","decryptData","encryptedData","bytes","decrypt","parse","enc","Utf8","error"],"sources":["C:/Users/ASUS/OneDrive/Desktop/PEDALS  UP/Cryptolet/cryptolet/src/utils/passwordManager.js"],"sourcesContent":["// Create a new file for password management\r\nimport CryptoJS from 'crypto-js';\r\n\r\nexport const encryptData = (data, password) => {\r\n  return CryptoJS.AES.encrypt(JSON.stringify(data), password).toString();\r\n};\r\n\r\nexport const decryptData = (encryptedData, password) => {\r\n  try {\r\n    const bytes = CryptoJS.AES.decrypt(encryptedData, password);\r\n    return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};"],"mappings":"AAAA;AACA,OAAOA,QAAQ,MAAM,WAAW;AAEhC,OAAO,MAAMC,WAAW,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;EAC7C,OAAOH,QAAQ,CAACI,GAAG,CAACC,OAAO,CAACC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,EAAEC,QAAQ,CAAC,CAACK,QAAQ,CAAC,CAAC;AACxE,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,aAAa,EAAEP,QAAQ,KAAK;EACtD,IAAI;IACF,MAAMQ,KAAK,GAAGX,QAAQ,CAACI,GAAG,CAACQ,OAAO,CAACF,aAAa,EAAEP,QAAQ,CAAC;IAC3D,OAAOG,IAAI,CAACO,KAAK,CAACF,KAAK,CAACH,QAAQ,CAACR,QAAQ,CAACc,GAAG,CAACC,IAAI,CAAC,CAAC;EACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}