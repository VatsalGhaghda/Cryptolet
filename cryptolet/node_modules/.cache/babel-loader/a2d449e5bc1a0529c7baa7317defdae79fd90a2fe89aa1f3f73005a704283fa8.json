{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\PEDALS  UP\\\\Cryptolet\\\\cryptolet\\\\src\\\\components\\\\PasswordLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Input } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { decryptData } from '../utils/passwordManager';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PasswordLogin({\n  setSeedPhrase,\n  setWallet\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [showRecovery, setShowRecovery] = useState(false);\n  useEffect(() => {\n    // Check if wallet data exists in local storage\n    const encryptedData = localStorage.getItem(\"encryptedWalletData\");\n    if (!encryptedData) {\n      toast.error(\"No wallet found!\");\n      navigate(\"/\");\n    }\n  }, [navigate]);\n  const handleLogin = () => {\n    if (!password) {\n      toast.error(\"Please enter your password\");\n      return;\n    }\n    const encryptedData = localStorage.getItem(\"encryptedWalletData\");\n    if (encryptedData) {\n      try {\n        const decryptedData = decryptData(encryptedData, password);\n        if (decryptedData && btoa(password) === decryptedData.hashedPassword) {\n          setSeedPhrase(decryptedData.seedPhrase);\n          setWallet(decryptedData.wallet);\n          toast.success(\"Login successful!\");\n          navigate(\"/yourwallet\");\n        } else {\n          toast.error(\"Incorrect password!\");\n          setShowRecovery(true);\n        }\n      } catch (error) {\n        toast.error(\"Failed to decrypt wallet data!\");\n        setShowRecovery(true);\n      }\n    } else {\n      toast.error(\"No wallet found!\");\n      navigate(\"/\");\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleLogin();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login to Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n        placeholder: \"Enter your password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        onKeyPress: handleKeyPress,\n        style: {\n          width: \"90%\",\n          marginBottom: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleLogin,\n        style: {\n          width: \"90%\",\n          marginBottom: \"20px\"\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), showRecovery && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: \"10px 0\"\n          },\n          children: \"Forgot your password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"default\",\n          onClick: () => navigate(\"/recover\"),\n          style: {\n            width: \"90%\"\n          },\n          children: \"Recover with Seed Phrase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"frontPageBottom\",\n        onClick: () => navigate(\"/\"),\n        children: \"Back Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(PasswordLogin, \"uK+vE8gyLzQoA/aAlebIRk6Tg0I=\", false, function () {\n  return [useNavigate];\n});\n_c = PasswordLogin;\nexport default PasswordLogin;\nvar _c;\n$RefreshReg$(_c, \"PasswordLogin\");","map":{"version":3,"names":["React","useState","useEffect","Button","Input","useNavigate","toast","decryptData","jsxDEV","_jsxDEV","Fragment","_Fragment","PasswordLogin","setSeedPhrase","setWallet","_s","navigate","password","setPassword","showRecovery","setShowRecovery","encryptedData","localStorage","getItem","error","handleLogin","decryptedData","btoa","hashedPassword","seedPhrase","wallet","success","handleKeyPress","e","key","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Password","placeholder","value","onChange","target","onKeyPress","style","width","marginBottom","type","onClick","margin","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/PEDALS  UP/Cryptolet/cryptolet/src/components/PasswordLogin.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Input } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport { decryptData } from '../utils/passwordManager';\r\n\r\nfunction PasswordLogin({ setSeedPhrase, setWallet }) {\r\n  const navigate = useNavigate();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showRecovery, setShowRecovery] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if wallet data exists in local storage\r\n    const encryptedData = localStorage.getItem(\"encryptedWalletData\");\r\n    if (!encryptedData) {\r\n      toast.error(\"No wallet found!\");\r\n      navigate(\"/\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  const handleLogin = () => {\r\n    if (!password) {\r\n      toast.error(\"Please enter your password\");\r\n      return;\r\n    }\r\n\r\n    const encryptedData = localStorage.getItem(\"encryptedWalletData\");\r\n    if (encryptedData) {\r\n      try {\r\n        const decryptedData = decryptData(encryptedData, password);\r\n        if (decryptedData && btoa(password) === decryptedData.hashedPassword) {\r\n          setSeedPhrase(decryptedData.seedPhrase);\r\n          setWallet(decryptedData.wallet);\r\n          toast.success(\"Login successful!\");\r\n          navigate(\"/yourwallet\");\r\n        } else {\r\n          toast.error(\"Incorrect password!\");\r\n          setShowRecovery(true);\r\n        }\r\n      } catch (error) {\r\n        toast.error(\"Failed to decrypt wallet data!\");\r\n        setShowRecovery(true);\r\n      }\r\n    } else {\r\n      toast.error(\"No wallet found!\");\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleLogin();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        <h2>Login to Wallet</h2>\r\n        <Input.Password\r\n          placeholder=\"Enter your password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          style={{ width: \"90%\", marginBottom: \"20px\" }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleLogin}\r\n          style={{ width: \"90%\", marginBottom: \"20px\" }}\r\n        >\r\n          Login\r\n        </Button>\r\n        \r\n        {showRecovery && (\r\n          <>\r\n            <p style={{ margin: \"10px 0\" }}>Forgot your password?</p>\r\n            <Button\r\n              type=\"default\"\r\n              onClick={() => navigate(\"/recover\")}\r\n              style={{ width: \"90%\" }}\r\n            >\r\n              Recover with Seed Phrase\r\n            </Button>\r\n          </>\r\n        )}\r\n        \r\n        <p className=\"frontPageBottom\" onClick={() => navigate(\"/\")}>\r\n          Back Home\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PasswordLogin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}