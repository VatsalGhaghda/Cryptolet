{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\PEDALS  UP\\\\Cryptolet\\\\cryptolet\\\\src\\\\components\\\\ImportWallet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Input } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { ethers } from \"ethers\";\nimport { encryptData } from '../utils/passwordManager';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ImportWallet({\n  setSeedPhrase,\n  setWallet\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [step, setStep] = useState(1);\n  const [importedPhrase, setImportedPhrase] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const validateAndProceed = () => {\n    try {\n      ethers.Wallet.fromPhrase(importedPhrase);\n      setStep(2);\n    } catch (error) {\n      toast.error(\"Invalid seed phrase!\");\n    }\n  };\n  const handleImport = () => {\n    if (!password || !confirmPassword) {\n      toast.error(\"Please enter and confirm your password\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords don't match!\");\n      return;\n    }\n    if (password.length < 8) {\n      toast.error(\"Password must be at least 8 characters!\");\n      return;\n    }\n    try {\n      const wallet = ethers.Wallet.fromPhrase(importedPhrase);\n      const walletData = {\n        seedPhrase: importedPhrase,\n        wallet: wallet.address,\n        hashedPassword: btoa(password)\n      };\n      const encryptedData = encryptData(walletData, password);\n      localStorage.setItem('encryptedWalletData', encryptedData);\n      setSeedPhrase(importedPhrase);\n      setWallet(wallet.address);\n      toast.success(\"Wallet imported successfully!\");\n      navigate(\"/yourwallet\");\n    } catch (error) {\n      toast.error(\"Error importing wallet. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [step === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Import Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"white\",\n          marginBottom: \"20px\"\n        },\n        children: \"Enter your 12-word seed phrase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n        placeholder: \"Enter seed phrase...\",\n        value: importedPhrase,\n        onChange: e => setImportedPhrase(e.target.value),\n        style: {\n          width: \"90%\",\n          marginBottom: \"20px\",\n          height: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: validateAndProceed,\n        style: {\n          width: \"90%\"\n        },\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n        placeholder: \"Create password (min 8 characters)\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        style: {\n          width: \"90%\",\n          marginBottom: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n        placeholder: \"Confirm password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        style: {\n          width: \"90%\",\n          marginBottom: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleImport,\n        style: {\n          width: \"90%\"\n        },\n        children: \"Import Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"frontPageBottom\",\n      onClick: () => navigate(\"/\"),\n      children: \"Back Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(ImportWallet, \"WPnDP6jjfsgFgYHRP4UIV6kbOHw=\", false, function () {\n  return [useNavigate];\n});\n_c = ImportWallet;\nexport default ImportWallet;\nvar _c;\n$RefreshReg$(_c, \"ImportWallet\");","map":{"version":3,"names":["React","useState","Button","Input","useNavigate","toast","ethers","encryptData","jsxDEV","_jsxDEV","Fragment","_Fragment","ImportWallet","setSeedPhrase","setWallet","_s","navigate","step","setStep","importedPhrase","setImportedPhrase","password","setPassword","confirmPassword","setConfirmPassword","validateAndProceed","Wallet","fromPhrase","error","handleImport","length","wallet","walletData","seedPhrase","address","hashedPassword","btoa","encryptedData","localStorage","setItem","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","TextArea","placeholder","value","onChange","e","target","width","height","type","onClick","Password","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/PEDALS  UP/Cryptolet/cryptolet/src/components/ImportWallet.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Input } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport { ethers } from \"ethers\";\r\nimport { encryptData } from '../utils/passwordManager';\r\n\r\nfunction ImportWallet({ setSeedPhrase, setWallet }) {\r\n  const navigate = useNavigate();\r\n  const [step, setStep] = useState(1);\r\n  const [importedPhrase, setImportedPhrase] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const validateAndProceed = () => {\r\n    try {\r\n      ethers.Wallet.fromPhrase(importedPhrase);\r\n      setStep(2);\r\n    } catch (error) {\r\n      toast.error(\"Invalid seed phrase!\");\r\n    }\r\n  };\r\n\r\n  const handleImport = () => {\r\n    if (!password || !confirmPassword) {\r\n      toast.error(\"Please enter and confirm your password\");\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      toast.error(\"Passwords don't match!\");\r\n      return;\r\n    }\r\n    if (password.length < 8) {\r\n      toast.error(\"Password must be at least 8 characters!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const wallet = ethers.Wallet.fromPhrase(importedPhrase);\r\n      const walletData = {\r\n        seedPhrase: importedPhrase,\r\n        wallet: wallet.address,\r\n        hashedPassword: btoa(password)\r\n      };\r\n\r\n      const encryptedData = encryptData(walletData, password);\r\n      localStorage.setItem('encryptedWalletData', encryptedData);\r\n\r\n      setSeedPhrase(importedPhrase);\r\n      setWallet(wallet.address);\r\n      toast.success(\"Wallet imported successfully!\");\r\n      navigate(\"/yourwallet\");\r\n    } catch (error) {\r\n      toast.error(\"Error importing wallet. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      {step === 1 ? (\r\n        <>\r\n          <h2>Import Wallet</h2>\r\n          <p style={{ color: \"white\", marginBottom: \"20px\" }}>\r\n            Enter your 12-word seed phrase\r\n          </p>\r\n          <Input.TextArea\r\n            placeholder=\"Enter seed phrase...\"\r\n            value={importedPhrase}\r\n            onChange={(e) => setImportedPhrase(e.target.value)}\r\n            style={{ width: \"90%\", marginBottom: \"20px\", height: \"100px\" }}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={validateAndProceed}\r\n            style={{ width: \"90%\" }}\r\n          >\r\n            Continue\r\n          </Button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h2>Set Password</h2>\r\n          <Input.Password\r\n            placeholder=\"Create password (min 8 characters)\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            style={{ width: \"90%\", marginBottom: \"20px\" }}\r\n          />\r\n          <Input.Password\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            style={{ width: \"90%\", marginBottom: \"20px\" }}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={handleImport}\r\n            style={{ width: \"90%\" }}\r\n          >\r\n            Import Wallet\r\n          </Button>\r\n        </>\r\n      )}\r\n      <p className=\"frontPageBottom\" onClick={() => navigate(\"/\")}>\r\n        Back Home\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImportWallet;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,QAAQ,MAAM;AACpC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,WAAW,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvD,SAASC,YAAYA,CAAC;EAAEC,aAAa;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAClD,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMwB,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI;MACFnB,MAAM,CAACoB,MAAM,CAACC,UAAU,CAACR,cAAc,CAAC;MACxCD,OAAO,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdvB,KAAK,CAACuB,KAAK,CAAC,sBAAsB,CAAC;IACrC;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACR,QAAQ,IAAI,CAACE,eAAe,EAAE;MACjClB,KAAK,CAACuB,KAAK,CAAC,wCAAwC,CAAC;MACrD;IACF;IACA,IAAIP,QAAQ,KAAKE,eAAe,EAAE;MAChClB,KAAK,CAACuB,KAAK,CAAC,wBAAwB,CAAC;MACrC;IACF;IACA,IAAIP,QAAQ,CAACS,MAAM,GAAG,CAAC,EAAE;MACvBzB,KAAK,CAACuB,KAAK,CAAC,yCAAyC,CAAC;MACtD;IACF;IAEA,IAAI;MACF,MAAMG,MAAM,GAAGzB,MAAM,CAACoB,MAAM,CAACC,UAAU,CAACR,cAAc,CAAC;MACvD,MAAMa,UAAU,GAAG;QACjBC,UAAU,EAAEd,cAAc;QAC1BY,MAAM,EAAEA,MAAM,CAACG,OAAO;QACtBC,cAAc,EAAEC,IAAI,CAACf,QAAQ;MAC/B,CAAC;MAED,MAAMgB,aAAa,GAAG9B,WAAW,CAACyB,UAAU,EAAEX,QAAQ,CAAC;MACvDiB,YAAY,CAACC,OAAO,CAAC,qBAAqB,EAAEF,aAAa,CAAC;MAE1DxB,aAAa,CAACM,cAAc,CAAC;MAC7BL,SAAS,CAACiB,MAAM,CAACG,OAAO,CAAC;MACzB7B,KAAK,CAACmC,OAAO,CAAC,+BAA+B,CAAC;MAC9CxB,QAAQ,CAAC,aAAa,CAAC;IACzB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdvB,KAAK,CAACuB,KAAK,CAAC,2CAA2C,CAAC;IAC1D;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKgC,SAAS,EAAC,SAAS;IAAAC,QAAA,GACrBzB,IAAI,KAAK,CAAC,gBACTR,OAAA,CAAAE,SAAA;MAAA+B,QAAA,gBACEjC,OAAA;QAAAiC,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBrC,OAAA;QAAGsC,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAP,QAAA,EAAC;MAEpD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJrC,OAAA,CAACN,KAAK,CAAC+C,QAAQ;QACbC,WAAW,EAAC,sBAAsB;QAClCC,KAAK,EAAEjC,cAAe;QACtBkC,QAAQ,EAAGC,CAAC,IAAKlC,iBAAiB,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACnDL,KAAK,EAAE;UAAES,KAAK,EAAE,KAAK;UAAEP,YAAY,EAAE,MAAM;UAAEQ,MAAM,EAAE;QAAQ;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACFrC,OAAA,CAACP,MAAM;QACLwD,IAAI,EAAC,SAAS;QACdC,OAAO,EAAElC,kBAAmB;QAC5BsB,KAAK,EAAE;UAAES,KAAK,EAAE;QAAM,CAAE;QAAAd,QAAA,EACzB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CAAC,gBAEHrC,OAAA,CAAAE,SAAA;MAAA+B,QAAA,gBACEjC,OAAA;QAAAiC,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBrC,OAAA,CAACN,KAAK,CAACyD,QAAQ;QACbT,WAAW,EAAC,oCAAoC;QAChDC,KAAK,EAAE/B,QAAS;QAChBgC,QAAQ,EAAGC,CAAC,IAAKhC,WAAW,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CL,KAAK,EAAE;UAAES,KAAK,EAAE,KAAK;UAAEP,YAAY,EAAE;QAAO;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFrC,OAAA,CAACN,KAAK,CAACyD,QAAQ;QACbT,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAE7B,eAAgB;QACvB8B,QAAQ,EAAGC,CAAC,IAAK9B,kBAAkB,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACpDL,KAAK,EAAE;UAAES,KAAK,EAAE,KAAK;UAAEP,YAAY,EAAE;QAAO;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFrC,OAAA,CAACP,MAAM;QACLwD,IAAI,EAAC,SAAS;QACdC,OAAO,EAAE9B,YAAa;QACtBkB,KAAK,EAAE;UAAES,KAAK,EAAE;QAAM,CAAE;QAAAd,QAAA,EACzB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT,CACH,eACDrC,OAAA;MAAGgC,SAAS,EAAC,iBAAiB;MAACkB,OAAO,EAAEA,CAAA,KAAM3C,QAAQ,CAAC,GAAG,CAAE;MAAA0B,QAAA,EAAC;IAE7D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAC/B,EAAA,CArGQH,YAAY;EAAA,QACFR,WAAW;AAAA;AAAAyD,EAAA,GADrBjD,YAAY;AAuGrB,eAAeA,YAAY;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}