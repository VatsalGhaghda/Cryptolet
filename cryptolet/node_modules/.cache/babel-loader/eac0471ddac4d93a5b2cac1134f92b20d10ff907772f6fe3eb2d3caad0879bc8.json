{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\PEDALS  UP\\\\Cryptolet\\\\cryptolet\\\\src\\\\components\\\\RecoverAccount.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Input } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { ethers } from \"ethers\";\nimport { encryptData } from '../utils/passwordManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecoverAccount({\n  setSeedPhrase,\n  setWallet\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [importedPhrase, setImportedPhrase] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const handleRecovery = () => {\n    if (!password || !confirmPassword) {\n      toast.error(\"Please enter and confirm your password\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords don't match!\");\n      return;\n    }\n    if (password.length < 8) {\n      toast.error(\"Password must be at least 8 characters!\");\n      return;\n    }\n    try {\n      const wallet = ethers.Wallet.fromPhrase(importedPhrase);\n      const walletData = {\n        seedPhrase: importedPhrase,\n        wallet: wallet.address,\n        hashedPassword: btoa(password)\n      };\n      const encryptedData = encryptData(walletData, password);\n      localStorage.setItem('encryptedWalletData', encryptedData);\n      setSeedPhrase(importedPhrase);\n      setWallet(wallet.address);\n      toast.success(\"Account recovered successfully!\");\n      navigate(\"/yourwallet\");\n    } catch (error) {\n      toast.error(\"Error recovering account. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recover Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"white\",\n        marginBottom: \"20px\"\n      },\n      children: \"Enter your 12-word seed phrase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n      placeholder: \"Enter seed phrase...\",\n      value: importedPhrase,\n      onChange: e => setImportedPhrase(e.target.value),\n      style: {\n        width: \"90%\",\n        marginBottom: \"20px\",\n        height: \"100px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n      placeholder: \"Create new password (min 8 characters)\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      style: {\n        width: \"90%\",\n        marginBottom: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n      placeholder: \"Confirm new password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      style: {\n        width: \"90%\",\n        marginBottom: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleRecovery,\n      style: {\n        width: \"90%\"\n      },\n      children: \"Recover Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"frontPageBottom\",\n      onClick: () => navigate(\"/\"),\n      children: \"Back Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(RecoverAccount, \"UqncurPa5US7MPaHvM6KwzTm010=\", false, function () {\n  return [useNavigate];\n});\n_c = RecoverAccount;\nexport default RecoverAccount;\nvar _c;\n$RefreshReg$(_c, \"RecoverAccount\");","map":{"version":3,"names":["React","useState","Button","Input","useNavigate","toast","ethers","encryptData","jsxDEV","_jsxDEV","RecoverAccount","setSeedPhrase","setWallet","_s","navigate","importedPhrase","setImportedPhrase","password","setPassword","confirmPassword","setConfirmPassword","handleRecovery","error","length","wallet","Wallet","fromPhrase","walletData","seedPhrase","address","hashedPassword","btoa","encryptedData","localStorage","setItem","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","TextArea","placeholder","value","onChange","e","target","width","height","Password","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/PEDALS  UP/Cryptolet/cryptolet/src/components/RecoverAccount.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Input } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport { ethers } from \"ethers\";\r\nimport { encryptData } from '../utils/passwordManager';\r\n\r\nfunction RecoverAccount({ setSeedPhrase, setWallet }) {\r\n  const navigate = useNavigate();\r\n  const [importedPhrase, setImportedPhrase] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const handleRecovery = () => {\r\n    if (!password || !confirmPassword) {\r\n      toast.error(\"Please enter and confirm your password\");\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      toast.error(\"Passwords don't match!\");\r\n      return;\r\n    }\r\n    if (password.length < 8) {\r\n      toast.error(\"Password must be at least 8 characters!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const wallet = ethers.Wallet.fromPhrase(importedPhrase);\r\n      const walletData = {\r\n        seedPhrase: importedPhrase,\r\n        wallet: wallet.address,\r\n        hashedPassword: btoa(password)\r\n      };\r\n\r\n      const encryptedData = encryptData(walletData, password);\r\n      localStorage.setItem('encryptedWalletData', encryptedData);\r\n\r\n      setSeedPhrase(importedPhrase);\r\n      setWallet(wallet.address);\r\n      toast.success(\"Account recovered successfully!\");\r\n      navigate(\"/yourwallet\");\r\n    } catch (error) {\r\n      toast.error(\"Error recovering account. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <h2>Recover Account</h2>\r\n      <p style={{ color: \"white\", marginBottom: \"20px\" }}>\r\n        Enter your 12-word seed phrase\r\n      </p>\r\n      <Input.TextArea\r\n        placeholder=\"Enter seed phrase...\"\r\n        value={importedPhrase}\r\n        onChange={(e) => setImportedPhrase(e.target.value)}\r\n        style={{ width: \"90%\", marginBottom: \"20px\", height: \"100px\" }}\r\n      />\r\n      <Input.Password\r\n        placeholder=\"Create new password (min 8 characters)\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        style={{ width: \"90%\", marginBottom: \"20px\" }}\r\n      />\r\n      <Input.Password\r\n        placeholder=\"Confirm new password\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n        style={{ width: \"90%\", marginBottom: \"20px\" }}\r\n      />\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={handleRecovery}\r\n        style={{ width: \"90%\" }}\r\n      >\r\n        Recover Account\r\n      </Button>\r\n      <p className=\"frontPageBottom\" onClick={() => navigate(\"/\")}>\r\n        Back Home\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecoverAccount;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}